########### VBA CODE TO CONVERT NUMBER TO WORDS   #############

Function NumberToWords(ByVal MyNumber As Variant) As String
    Dim Units As Variant, Tens As Variant
    Dim Temp As String
    Dim DecimalPlace As Integer
    Dim IntegerPart As String, DecimalPart As String

    ' Arrays to store words for numbers
    Units = Array("", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine")
    Tens = Array("", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety")
    Dim Teens As Variant
    Teens = Array("Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen")

    ' Validate the input
    If Not IsNumeric(MyNumber) Then
        NumberToWords = "Invalid Input"
        Exit Function
    End If

    ' Split the number into integer and decimal parts
    MyNumber = Format(MyNumber, "0.00")
    DecimalPlace = InStr(MyNumber, ".")
    IntegerPart = Left(MyNumber, DecimalPlace - 1)
    DecimalPart = Mid(MyNumber, DecimalPlace + 1)

    ' Convert the integer part to words
    NumberToWords = ConvertWholeNumber(IntegerPart, Units, Tens, Teens)

    ' Add decimal part (if any)
    If Val(DecimalPart) > 0 Then
        NumberToWords = NumberToWords & " and " & ConvertWholeNumber(DecimalPart, Units, Tens, Teens) & " Cents"
    End If
End Function

Function ConvertWholeNumber(ByVal Num As String, Units As Variant, Tens As Variant, Teens As Variant) As String
    Dim Result As String
    Dim n As Long
    n = Val(Num)

    ' Handle thousands
    If n >= 1000 Then
        Result = ConvertWholeNumber(Int(n / 1000), Units, Tens, Teens) & " Thousand "
        n = n Mod 1000
    End If

    ' Handle hundreds
    If n >= 100 Then
        Result = Result & Units(Int(n / 100)) & " Hundred "
        n = n Mod 100
    End If

    ' Handle tens and units
    If n >= 20 Then
        Result = Result & Tens(Int(n / 10)) & " "
        n = n Mod 10
    ElseIf n >= 10 Then
        Result = Result & Teens(n - 10) & " "
        n = 0
    End If

    ' Handle units
    If n > 0 Then
        Result = Result & Units(n) & " "
    End If

    ConvertWholeNumber = Trim(Result)
End Function

------------------------------------------------------------------------------------------------------------------
How to Use:
Paste the Code:
Press Alt + F11 in Excel.
Go to Insert > Module and paste the code.
Save Workbook: Save the workbook as a macro-enabled file (.xlsm).

Use the Formula:
Enter a number in any cell, e.g., 1234.56 in cell A1.
In another cell, use the formula =NumberToWords(A1).

---------------------------------------------------------------------------------------------------------------

###### VBA code to Automated Data Entry ######

Sub AutomatedDataEntry()
    Dim ws As Worksheet
    Dim i As Long

    ' Set the worksheet where data will be entered
    Set ws = ThisWorkbook.Sheets("Sheet1")

    ' Example: Enter 10 rows of data dynamically
    For i = 1 To 10
        ws.Cells(i + 1, 1).Value = "Name" & i       ' Column A: Names
        ws.Cells(i + 1, 2).Value = "Employee" & i   ' Column B: Employee ID
        ws.Cells(i + 1, 3).Value = Date + i         ' Column C: Dates
        ws.Cells(i + 1, 4).Value = Int(Rnd * 100)   ' Column D: Random Numbers
    Next i

    MsgBox "Data Entry Completed!"
End Sub

-----------------------------------------------------------------------------------------------------------

Steps:
Open Excel and press Alt + F11 to open the VBA editor.
Go to Insert > Module and paste the code.
Replace "Sheet1" with the sheet name where data should be entered.
Run the macro by pressing Alt + F8, selecting AutomatedDataEntry, and clicking Run.
Output:
Column A: Name1, Name2, ..., Name10
Column B: Employee1, Employee2, ..., Employee10
Column C: Todayâ€™s date incremented by 1 for each row.
Column D: Random numbers between 0 and 99.

-------------------------------------------------------------------------------------------------------------



Sub CleanData()
    Dim ws As Worksheet
    Dim LastRow As Long
    Dim rng As Range

    ' Set the worksheet and determine the last row
    Set ws = ThisWorkbook.Sheets("Sheet1")
    LastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row

    ' Remove duplicates in columns A to D
    Set rng = ws.Range("A1:D" & LastRow)
    rng.RemoveDuplicates Columns:=Array(1, 2, 3, 4), Header:=xlYes

    ' Trim spaces and standardize text to Proper case in Column A
    For Each cell In ws.Range("A2:A" & LastRow)
        If Not IsEmpty(cell.Value) Then
            cell.Value = Application.Trim(Application.Proper(cell.Value))
        End If
    Next cell

    MsgBox "Data Cleaning Completed!"
End Sub



